name: Build Develop

on: [ push ]
env:
  COMPOSER_VERSION: '2.3.10'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    name: Build PHP ${{ matrix.php-version }} Alpine ${{ matrix.alpine-version }}
    runs-on: '${{ matrix.os }}'
    env:
      ALPINE_VERSION: '${{ matrix.alpine-version }}'
      PHP_VERSION: '${{ matrix.php-version }}'
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        alpine-version: [ '3.13', '3.14', '3.15', '3.16' ]
        php-version: [ '7.4', '8.0', '8.1' ]
        exclude:
          - php-version: '7.4'
            alpine-version: '3.16'
      max-parallel: 8
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch the PHP BUILD VERSION
        id: fetch-php-build-version
        shell: php {0}
        run: |
          <?php
          $alpineVersion = getenv('ALPINE_VERSION');
          $phpVersion = getenv('PHP_VERSION');
          if ($phpVersion == '8.1' && in_array($alpineVersion, ['3.16'])) {
              $version = '81';
          } else {
              $version = substr($phpVersion, 0, 1);
          }
          echo "::set-output name=version::" . $version . PHP_EOL;
      - name: Build
        run: export PHP_BUILD_VERSION=${{ steps.fetch-php-build-version.outputs.version }} && docker-compose build alpine-dev
      - name: Login
        run: docker login --username supine -p ${{ secrets.DOCKERHUB_ACCESSTOKEN }}
      - name: Push
        run: docker push supine/hyperf:${PHP_VERSION}-alpine-v${{ matrix.alpine-version }}-dev

